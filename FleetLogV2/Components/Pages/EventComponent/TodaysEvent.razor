@page "/within24hours"
@inject ApplicationDbContext _app
@attribute [Authorize(Roles = "Admin, Employee")]
@rendermode InteractiveServer


<h3 class="m-4">Activity within <span class="text-shadow">24</span> hours</h3>

@if (Todays is null)
{
    <p>Loading...</p>
}
else
{
    <div class="m-3 card shadow">
        <QuickGrid Items="Todays.AsQueryable()" Pagination="pagination">
            <PropertyColumn Property="e => e.Driver.DriverName" Sortable="true" Title="Driver's name" Class="py-1 px-3 border-1 col-1" Align="Align.Center"></PropertyColumn>
            <PropertyColumn Property="e => e.EventType" Sortable="true" Title="Activity" Class="py-1 px-3 border-1" Align="Align.Center"></PropertyColumn>
            <PropertyColumn Property="e => e.TimeStamp" Sortable="true" Title="Date" Class="py-1 px-3 border-1" Align="Align.Center"></PropertyColumn>
            <PropertyColumn Property="e => e.AmountIn" Sortable="true" Title="Income" Class="py-1 px-3 border-1" Align="Align.Center"></PropertyColumn>
            <PropertyColumn Property="e => e.AmountOut" Sortable="true" Title="Expense" Class="py-1 px-3 border-1" Align="Align.Center"></PropertyColumn>
            <TemplateColumn Title="Activity" Class="py-1 px-3 border-1 text-black" Align="Align.Center">
                <a class="btn btn-none btn-sm fw-bold text-info"><i class="fa-regular fa-pen-to-square"></i></a>
                <a class="btn btn-none btn-sm fw-bold text-info"><i class="fa-regular fa-trash-can"></i></a>
            </TemplateColumn>
        </QuickGrid>
    </div>
    <Paginator State="@pagination"></Paginator>
}
<style>
    tr:hover {
        background-color: rgba(0, 123, 255, 0.3);
    }
</style>
@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    List<Event> Events;
    List<Event> Todays;
    protected override async Task OnInitializedAsync()
    {
        Events = await _app.Events.Include(e => e.Driver).ThenInclude(d => d.Employee).ToListAsync();
            Todays = Events.Where(e => e.TimeStamp >= DateTime.Now.AddHours(-24)).ToList();
       
    }
}
